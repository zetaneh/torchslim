[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "torchslim"
version = "1.0.0"
description = "Extensible PyTorch Model Compression Library with Plugin-Based Architecture"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "TorchSlim Contributors", email = "your-email@example.com"},
]
maintainers = [
    {name = "TorchSlim Contributors", email = "your-email@example.com"},
]
keywords = [
    "pytorch",
    "model compression", 
    "neural networks",
    "deep learning",
    "pruning",
    "quantization",
    "svd",
    "lora"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research", 
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "torch>=1.9.0",
    "torchvision>=0.10.0",
    "numpy>=1.19.0", 
    "scipy>=1.7.0",
    "tqdm>=4.60.0",
    "pandas>=1.3.0",
]

[project.optional-dependencies]
analysis = [
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0", 
    "plotly>=5.0.0",
]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.9",
    "mypy>=0.910",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "twine>=3.0.0",
    "wheel>=0.36.0",
]
notebooks = [
    "jupyter>=1.0.0",
    "ipywidgets>=7.6.0",
]
benchmarks = [
    "psutil>=5.8.0",
    "memory-profiler>=0.60.0",
]
all = [
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0", 
    "jupyter>=1.0.0",
    "ipywidgets>=7.6.0",
    "psutil>=5.8.0",
    "memory-profiler>=0.60.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/torchslim"
Repository = "https://github.com/yourusername/torchslim.git"
Documentation = "https://torchslim.readthedocs.io/"
"Bug Reports" = "https://github.com/yourusername/torchslim/issues"
Changelog = "https://github.com/yourusername/torchslim/blob/main/CHANGELOG.md"

[project.scripts]
torchslim = "torchslim.cli.main:main"

[tool.setuptools.packages.find]
include = ["torchslim*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
torchslim = ["*.yaml", "*.json", "*.txt"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["torchslim"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --disable-warnings --tb=short"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["torchslim"]
omit = [
    "tests/*",
    "examples/*",
    "docs/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]